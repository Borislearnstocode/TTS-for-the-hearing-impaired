### Plotting & Analysis of 1- and 10-file vocoders###

library('tidyverse')
library('ggplot2')

# import data
data_10 = read.csv("STOI_10.csv")
data_1 = read.csv("STOI_1.csv")

# Reshape the data structure 
raw_10 <- data_10 %>% 
  gather(models, stoi_10, 1:21) %>% 
  arrange(models)

raw_1 <- data_1 %>% 
  gather(models, stoi_1, 1:21) %>% 
  arrange(models)

# Combine the data into one DataFrame and get rid of the X in the model names
followup_stoi <- bind_cols(raw_10$models, 
                           raw_10$stoi_10, 
                           raw_1$stoi_1) %>% 
  set_names(c("Iterations","stoi_10","stoi_1"))

followup_stoi$Iterations <- gsub("^X", "", followup_stoi$Iterations)


# Covert the dataset into a longer format
followup_stoi_long <- combined_stoi %>%
  pivot_longer(cols = starts_with("stoi_"), names_to = "Model", values_to = "STOI") %>% 
  mutate(Model = str_replace(Model, "stoi_", ""))

# Calculate the mean and SD
followup_long_stats <- followup_stoi_long %>% 
  group_by(Iterations, Model) %>% 
  summarize(mean_stoi = mean(STOI),
            sd_stoi = sd(STOI))


###################################### PLOTTING ##############################################


# Convert into numeric
followup_long_stats$Iterations <- as.numeric(followup_long_stats$Iterations)

# Define legend 
legend_labels_HI = c("Trained with 1 files",
                     "Trained with 10 file",
                     "Trained with 10k file")
legend_order_HI = c("1", "10", "10k")

### PLOT THE MAIN GRAPH ###
ggplot(followup_long_stats, aes(x = Iterations, y = mean_stoi, color = Model)) +
  
  # Plot setting
  geom_line() +

  #Themes
  theme_bw()+
  theme(plot.title = element_text(hjust = 0.5, size = 13, face = "bold"),
        legend.position = "bottom",
        legend.title = element_blank(),
        legend.text = element_text(size = 10),
        axis.title = element_text(size = 12),
        axis.text = element_text(size = 10))+
  
  # Legend & Axis setting
  labs(x = "Iterations", y = "Mean STOI", 
       color = "Model", 
       title = "Mean STOI Scores of Patient-Audiogram Amplification (follow-up test)") +
  scale_x_continuous(breaks = seq(630000, 640000, 1000), 
                     labels = seq(0, 10000, 1000)) +
  scale_color_manual (breaks = legend_order_HI,
                      labels = legend_labels_HI,
                      values = viridis(length(legend_order_HI)))+
  guides(color = guide_legend(ncol = 3))



############################# CHECKPOINTS OF INTEREST ################################
desired_checkpoints <- c(630000, 630500, 631000, 632000, 633000, 640000, 655000)
filtered_data_followup <- followup_stoi_long %>% 
  filter(Iterations %in% desired_checkpoints)

# create errorbar data
bar_points_followup <- list('1' = c(630000,630500,631500,632000,632500,633000,655000),
                            '10' = c(630000,630500,631500,633000,634500,637000,655000))
# Create a dataframe for errorbar data 
errorbar_data_followup <- data.frame()

# Iterate over each data point
for (model in names(bar_points_followup)) {
  points = bar_points_NS[[model]]
  # filter data from the long df for errorbar
  filtered_points_errorbar <- followup_long_stats %>% 
    filter(Iterations %in% points, Model == model)
  # combine the data 
  errorbar_data_followup <- rbind(errorbar_data_followup, filtered_points_errorbar)
}




######### in the following is the plotting & Analysis of combined 1, 10, 50 ,100, 1k, 10k-file vocoders ###########

# Combine the data
combined_stoi <- HI_stoi %>%
  full_join(followup_stoi)

# Covert the dataset into a longer format
combined_stoi_long <- combined_stoi %>%
  pivot_longer(cols = starts_with("stoi_"), names_to = "Model", values_to = "STOI") %>% 
  mutate(Model = str_replace(Model, "stoi_", ""))

# Calculate the mean and SD
combined_long_stats <- combined_stoi_long %>% 
  group_by(Iterations, Model) %>% 
  summarize(mean_stoi = mean(STOI),
            sd_stoi = sd(STOI))

# Convert into numeric
combined_long_stats$Iterations <- as.numeric(combined_long_stats$Iterations)

# Define legend 
legend_labels_HI = c("1-file vocoder",
                     "10-file vocoder",
                     "50-file vocoder",
                     "100-file vocoder",
                     "1k-file vocoder",
                     "10k-file vocoder")
legend_order_HI = c("1", "10","50","100","1k","10k")

### PLOT THE MAIN GRAPH ###
ggplot(combined_long_stats, aes(x = Iterations, y = mean_stoi, color = Model)) +
  
  # Plot setting
  geom_line() +
  #geom_vline(xintercept = desired_checkpoints, linetype = "dashed", color = "#0000FF", alpha = 0.3) +
  
  #Themes
  theme_bw()+
  theme(plot.title = element_text(hjust = 0.5, size = 13, face = "bold"),
        legend.position = "right",
        legend.title = element_blank(),
        legend.text = element_text(size = 10),
        axis.title = element_text(size = 12),
        axis.text = element_text(size = 10))+
  
  # Legend & Axis setting
  labs(x = "Iterations", y = "Mean STOI", 
       color = "Model", 
       title = "Mean STOI Scores of Patient-Audiogram Vocoders (Exp.II-a,b)") +
  scale_x_continuous(breaks = seq(630000, 655000, 3000), 
                     labels = seq(0, 25000, 3000)) +
  scale_color_manual (breaks = legend_order_HI,
                      labels = legend_labels_HI,
                      values = viridis(length(legend_order_HI)))+
  guides(color = guide_legend(ncol = 1))




####### HEAT MAP #######
errorbar_data_NS <- filtered_data_NS %>%
  group_by(Iterations, Model) %>%
  summarise(mean_STOI = mean(STOI),
            sd_STOI = sd(STOI))

errorbar_data_HI <- filtered_data_HI %>%
  group_by(Iterations, Model) %>%
  summarise(mean_STOI = mean(STOI),
            sd_STOI = sd(STOI))

errorbar_data_followup <- filtered_data_followup %>%
  group_by(Iterations, Model) %>%
  summarise(mean_STOI = mean(STOI),
            sd_STOI = sd(STOI))

combined_errorbar_data <- rbind(errorbar_data_NS, errorbar_data_HI,errorbar_data_followup)

# Create the heatmap of both HI and NS
ggplot(combined_errorbar_data, aes(x = Iterations, y = Model, fill = sd_STOI)) +
  geom_tile(color = 'white') +
  geom_text(aes(label = round(sd_STOI, 3)), color = "white", size = 3, vjust = 0.5) +
  
  # Themes
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
  
  # Axis and legend settings
  labs(x = "Iterations", y = "Model", fill = "Standard Deviation") +
  scale_x_discrete(labels = c("0", "500", "1000", "2000", "3000", "10000", "25000"))+
  scale_fill_viridis() +
  theme(legend.position = "right")



# Perform ANOVA
followup_stoi_long$Iterations <- as.factor(followup_stoi_long$Iterations)
followup_stoi_long$Model <- as.factor(followup_stoi_long$Model)

result_HI_full <- aov(STOI ~ Model*Iterations, data = followup_stoi_long)

# Summarize the ANOVA results
summary(result_HI_full)

# Conduct Tukey post-hoc 
posthoc_HI_full = TukeyHSD(result_HI_full)
print(posthoc_HI_full)

posthoc_df <- as.data.frame(posthoc_HI$`Model:Iterations`) %>% 
  rownames_to_column(var = "Comparison")
